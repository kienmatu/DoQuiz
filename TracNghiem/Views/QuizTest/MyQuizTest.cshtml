@model PagedList.IPagedList<TracNghiem.ViewModel.QuizTestViewModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "bài tập của tôi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link href="~/Content/AdminLTE/plugins/datatables/dataTables.bootstrap4.css" rel="stylesheet" />

<div style="margin-top:10px;"></div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div style="padding: 0.75rem 1.25rem;">
                <div class="row">
                    <div class="col-sm-12 col-md-5">
                        <div>
                            <label style="display:inline-block;font-weight:normal">Sắp xếp theo <b>@ViewBag.sortname</b> @ViewBag.Sort</label>
                        </div>
                        @Html.ActionLink("Tiêu đề", "MyQuizTest", new { sortOrder = "title", CurrentSort = ViewBag.CurrentSort, titleStr = ViewBag.titleStr }) |
                        @Html.ActionLink("Ngày tạo", "MyQuizTest", new { sortOrder = "createdate", CurrentSort = ViewBag.CurrentSort, titleStr = ViewBag.titleStr }) |
                    </div>
                    <div class="col-sm-12 col-md-4">
                        @using (Html.BeginForm("MyQuizTest", "QuizTest", FormMethod.Get, new { enctype = "multipart/form-data" }))
                        {
                            <label style="display:inline-block;font-weight:normal;">
                                Tìm theo tiêu đề:
                                <input name="titleStr" type="search" value="@(ViewBag.titleStr as string)" class="form-control">
                            </label>
                            <label style="display:inline-block;font-weight:normal;">
                                <input style="margin-top:-4.4px" class="btn btn-info" type="submit" value="Tìm kiếm" />
                            </label>
                        }

                    </div>
                    <div class="col-md-3">
                        <br />
                        <a href="/QuizTest/MyQuizTest" style="font-size: 14px;font-weight: normal;padding: .8em;" class="badge badge-danger">RESET bộ lọc</a>
                        <a href="/QuizTest/Create" style="font-size: 14px;font-weight: normal;padding: .8em;" class="badge badge-info">Thêm Đề</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12">

        <div class="card">
            <div class="card-header">
                @if (Model.PageNumber > 1)
                {
                    <h3 class="card-title">
                        10 bài tập thứ @Model.PageNumber
                    </h3>
                }
                else
                {
                    <h3 class="card-title">
                        10 bài tập đầu tiên
                    </h3>
                }
            </div>
            <div class="card-body">
                <table id="lstPost" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên</th>
                            <th>Môn học</th>
                            <th>Người tạo</th>
                            <th>Ngày tạo</th>
                            <th>Hiển thị</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <p>@item.TestID</p>
                                </td>
                                <td>
                                    @item.name
                                </td>
                                <td>
                                    @item.LessonName
                                </td>
                                <td>
                                    @item.CreatorName
                                </td>
                                <td>
                                    @String.Format("{0:dd/MM/yyyy}", item.CreateDate)
                                </td>
                                <td>
                                    <label class="switch">
                                        <input onchange="changeStt(this)" type="checkbox" id="@item.TestID" @(item.status == TracNghiem.Models.TestStatus.Active ? "checked" : "") class="success">
                                        <span class="slider"></span>
                                    </label>
                                </td>
                                <td>
                                    @{
                                        if (User.Identity.Name == item.CreatorName || User.IsInRole("admin"))
                                        {
                                            <a onclick="deleteConfirm(@item.TestID,'@item.name')" href="#" class="badge badge-danger">Xóa</a>
                                            @Html.ActionLink("Sửa", "Edit", new { id = item.TestID }, new { @class = "badge badge-primary" })
                                            <a onclick="createRoom(@item.TestID,'@item.name')" href="#" class="badge badge-info">Mở bài tập</a>
                                        }
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Tên câu hỏi</th>
                            <th>Độ khó</th>
                            <th>Môn học</th>
                            <th>Ngày tạo</th>
                            <th>Hiển thị</th>
                            <th>Hành động</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>
@{
    if (Model.PageCount > 1)
    {
        <nav aria-label="Page navigation example" style="text-align:center">
            @Html.PagedListPager(Model, page => Url.Action("MyQuizTest", new { page, sortOrder = Request.Params["sortOrder"], CurrentSort = Request.Params["CurrentSort"], titleStr = ViewBag.titleStr }), new PagedListRenderOptions { UlElementClasses = new string[] { "pagination" }, LiElementClasses = new string[] { "page-item" } })
        </nav>
    }
}
<!-- The delete Modal -->
<div class="modal fade" id="deleteModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Bạn có muốn xóa đề ?</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                Modal body..
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" id="deleteBtn" class="btn btn-danger">Xóa</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>
<!-- The create room Modal -->
<div class="modal fade" id="roomModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Tạo phòng thi mới</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <p id="testname"></p>
                @*<div class="form-group">
                    <label for="Time">Bắt đầu lúc:</label><br />
                    <input class="form-control dateselect" type="datetime-local" id="fromTime" />
                </div>
                <div class="form-group">
                    <label for="Time">Kết thúc lúc:</label><br />
                    <input class="form-control dateselect" type="datetime-local" id="toTime" />
                </div>
                <div class="form-group">
                    <label for="Time">Mã phòng thi (tạo ngẫu nhiên):</label><br />
                    <input class="form-control" type="text" id="roomCode" placeholder="roomCode" />
                </div>*@
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" onclick="confirmCreateRoom()" class="btn btn-info">Tạo</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>
<script src="~/Content/AdminLTE/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Content/AdminLTE/plugins/datatables/dataTables.bootstrap4.min.js"></script>
<!--Load Script and Stylesheet -->
@*<script type="text/javascript" src="~/Content/jquery.simple-dtpicker.js"></script>*@
@*<link type="text/css" href="~/Content/jquery.simple-dtpicker.css" rel="stylesheet" />*@
<script>
    //$(function(){
    //    $('.dateselect').appendDtpicker({
    //        "dateFormat": "DD/MM/YYYY h:m"
    //    });
    //});
    var testID = -1;
    $(function () {
        $("#lstPost").DataTable();
    });
    var delmodal = $('#deleteModal');
    var idx;
    var deleteConfirm = function (id, title) {
        idx = id;
        delmodal.find('.modal-body').text(title);
        delmodal.modal('show');

    }
    $('#deleteBtn').click(function () {
        delmodal.modal('hide');
        $.ajax({
            type: "POST",
            url: '/QuizTest/DeleteQuizTest',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ id: idx }),
            dataType: "json",
            success: function (recData) {
                var notify = $.notify('<strong>Thành công</strong><br/>' + recData.Message + '<br />', {
                    type: 'pastel-info',
                    allow_dismiss: false,
                    timer: 1000,
                });
                setTimeout(function () {
                    window.location.reload();
                }, 2000);

            },
            error: function () {
                var notify = $.notify('<strong>Lỗi</strong><br/>Không xóa được<br />', {
                    type: 'pastel-warning',
                    allow_dismiss: false,
                });
            }
        });
    });
    var changeStt = function (xthis) {
        var xid = xthis.id;
        var st = xthis.checked ? 1 : 0;
        $.ajax({
            type: "POST",
            url: '/QuizTest/ChangeStatus',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ id: xid, state: st }),
            dataType: "json",
            success: function (recData) {
                var notify = $.notify('<strong>Thành công</strong><br/>' + recData.Message + '<br />', {
                    type: 'pastel-info',
                    allow_dismiss: false,
                    timer: 1000,
                });
            },
            error: function () { alert('An error occured'); }
        });
    }
    function createRoom(qtestid, testname) {
        testID = qtestid;
        let modal = $('#roomModal');
        modal.find('#testname').text(testname);
        //modal.find('#roomCode').val(RandomCode(7));
        modal.modal('show');
    }
    function RandomCode(length) {
        var result = '';
        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for (var i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
    }

    function confirmCreateRoom() {
        //let roomCode = $('#roomCode').val();
        //let fromTime = $('#fromTime').val();
        //let toTime = $('#toTime').val();
        //if (roomCode && fromTime && toTime) {
        //    if (roomCode.length > 20 || roomCode.length < 4) {
        //        swal('Lỗi', 'Mã phòng thi phải từ 4 đến 20 ký tự', 'warning');
        //    }
        //    else if (new Date() > new Date(toTime)) {
        //        swal('Lỗi', 'Ngày kết thúc phải lớn hơn hiện tại', 'warning');
        //    }
        //    else if (new Date(fromTime) >= new Date(toTime)) {
        //        swal('Lỗi', 'Ngày kết thúc phải lớn hơn ngày bắt đầu', 'warning');
        //    }
        //    else {
        //        axios.post('/DoQuiz/CreateActiveTest', { QuizTestID: testID, Code: roomCode, FromTime: fromTime, ToTime: toTime }).then(resp => {
        //            if (resp.data.Success) {
        //                swal('Thành công', resp.data.Message, 'success');
        //                $('#roomModal').modal('hide');
        //            }
        //            else {
        //                swal('Lỗi', resp.data.Message, 'error');
        //            }
        //        });
        //    }
        //}
        //else {
        //    swal('Lỗi', 'Vui lòng nhập đủ thông tin trước', 'warning');
        //}
        axios.post('/DoQuiz/CreateActiveTest', { QuizTestID: testID @*Code: roomCode, FromTime: fromTime, ToTime: toTime*@ }).then(resp => {
                    if (resp.data.Success) {
                        swal('Thành công', resp.data.Message, 'success');
                        $('#roomModal').modal('hide');
                    }
                    else {
                        swal('Lỗi', resp.data.Message, 'error');
                    }
        });

    }
</script>