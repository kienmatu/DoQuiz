
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Chuẩn bị vào phòng thi</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="~/Content/animate.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/Site.css" />
    <script src="/Scripts/jquery-3.1.1.js"></script>
    <script src="/Scripts/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/sweetalert/sweet-alert.css" />
    <script src="~/Scripts/sweetalert.min.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <style>
        body {
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }
        /*LOADING CSS*/
        #overlay {
            background: #ffffff;
            color: #666666;
            position: fixed;
            height: 100%;
            width: 100%;
            z-index: 5000;
            top: 0;
            left: 0;
            float: left;
            text-align: center;
            padding-top: 15%;
            opacity: .80;
        }

        .spinner {
            margin: 0 auto;
            height: 64px;
            width: 64px;
            animation: rotate 0.8s infinite linear;
            border: 5px solid firebrick;
            border-right-color: transparent;
            border-radius: 50%;
        }

        @@keyframes rotate {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
    <style>
        .q-title{
            font-weight:600;
        }
        .radius{
            border-radius: 5px;
        }
        .hidden{
            display:none;
        }
        .info{
          margin-bottom: .2rem;
        }
        .transparent{
                background-color: rgba(255, 255, 255, 0.84);
        }
        .transparent2{
                background-color: rgba(255, 255, 255, 0.24);
        }
        .answer div {
            margin-top:3px;
            display:block;
        }
    </style>
</head>
<body style="background-image: url('/Content/images/libbg2.jpg');">
    <style>
        @@keyframes ripple {
              0% {
                box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0);
              }
              50% {
                box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, 0.1);
              }
              100% {
                box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, 0);
              }
        }
        .md-radio {
          margin: 8px 0;
        }
        .md-radio.md-radio-inline {
          display: inline-block;
        }
        .md-radio input[type=radio] {
          display: none;
        }
        .md-radio input[type=radio]:checked + label:before {
          border-color: #337ab7;
          animation: ripple 0.2s linear forwards;
        }
        .md-radio input[type=radio]:checked + label:after {
          transform: scale(1);
        }
        .md-radio label {
          display: inline-block;
          min-height: 20px;
          position: relative;
          padding: 0 30px;
          margin-bottom: 0;
          cursor: pointer;
          vertical-align: bottom;
        }
        .md-radio label:before, .md-radio label:after {
          position: absolute;
          content: "";
          border-radius: 50%;
          transition: all 0.3s ease;
          transition-property: transform, border-color;
        }
        .md-radio label:before {
          left: 0;
          top: 0;
          width: 20px;
          height: 20px;
          border: 2px solid rgba(0, 0, 0, 0.54);
        }
        .md-radio label:after {
          top: 5px;
          left: 5px;
          width: 10px;
          height: 10px;
          transform: scale(0);
          background: #337ab7;
        }
        *, *:before, *:after {
  box-sizing: border-box;
}
    </style>
    <div id="overlay" style="display:none;">
        <div class="spinner"></div>
        <br />
        Loading...
    </div>
    <div id="infoArea" style="margin:2em">
        <div class="row">
            <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
                <div class="card card-signin my-5 transparent2">
                    <div class="card-body">
                        <h5 class="card-title text-center text-white">VÀO PHÒNG THI</h5>
                        <div class="form-label-group">
                            <label for="Username" class="text-white font-weight-bold">Mã Phòng Thi:</label><br />
                            <input class="form-control" type="text" id="roomCode" value="WNvjyzS" />
                            <br />
                        </div>
                        <button class="btn btn-lg btn-warning btn-block text-uppercase" onclick="EnterRoom()">Mở Phòng Thi</button>
                        <a class="btn btn-lg btn-block text-uppercase btn-info" href="/Admin" >QUAY LẠI</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="QuizInfo" class="hidden">
        <div class="row pl-4">
            <div class="col-md-4 mt-5 p-5" id="quiz"></div>
            <div class="col-md-4 mt-5" id="centerPanel">
                <div class="card radius transparent position-fixed mr-3">
                    <div class="card-header">
                        <h5 class="card-title">Thông tin bài thi</h5>
                    </div>
                    <div class="card-body">
                        <p class="info" id="quizname">Demo name</p>
                        <p class="info" id="lesson">Demo Lesson</p>
                        <p class="info" id="mark">Demo mark</p>
                        <p class="info" id="time">Demo time</p>
                        <a href="#" id="startBtn" onclick="StartExam()" class="btn btn-danger float-right">Bắt đầu !</a>
                        <div id="timePanel" class="hidden">
                            <hr class="mt-2" />
                            <h5 class="card-title">Thời gian còn lại:</h5>
                            <div id="timer" style="font-size:35px;"></div>
                            <a href="#" id="submitBtn" onclick="SubmitExam()" class="btn btn-warning float-right hidden">NỘP BÀI</a>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-md-4" id="rightPanel"></div>
        </div>
    </div>

    <script>
        var roomCode = '';
        var Quiz = {};
        const quizContainer = document.getElementById('quiz');
        function JoinRoom() {
            $('#roomCode').val('');
            $('#enterModal').modal('show');
        }
        function EnterRoom() {
            let code = $('#roomCode').val();
            if (code) {
                OpenRoom(code);
            }
            else {
                swal('Lỗi', 'Vui lòng nhập mã phòng', 'warning');
            }
        }
        function Preview(Quiz) {
            let quizinfo = $('#QuizInfo');
            quizinfo.find('#quizname').html('<b>Tên bài thi:</b> ' + Quiz.TestName);
            quizinfo.find('#mark').html('<b>Môn học:</b> ' + Quiz.LessonName);
            quizinfo.find('#subject').html('<b>Tổng điểm:</b> ' + Quiz.TotalMark);
            quizinfo.find('#time').html('<b>Thời gian (phút):</b> '+Quiz.TotalTime)
            quizinfo.removeClass('hidden');
            roomCode = Quiz.RoomCode;
        }
        function OpenRoom(code) {
            $('#overlay').fadeIn();
            axios.post('/DoQuiz/EnterRoom', { roomCode: code }).then(resp => {

                $('#overlay').fadeOut();
                let data = resp.data;
                Quiz = data.Quiz;
                if (data.Success) {
                    $("#infoArea").addClass('hidden');
                    Preview(data.Quiz);
                }
                else {
                    swal('Lỗi', data.Message, 'warning')
                }
            })
        }
        function StartExam()
        {
            $('#overlay').fadeIn();
            axios.post('/DoQuiz/StartExam', { roomCode: roomCode }).then(resp => {
                $('#overlay').fadeOut();
                let data = resp.data;
                if (data.Success) {
                    $('#rightPanel').addClass('hidden');
                    $('#quiz').removeClass('col-md-4');
                    $('#quiz').addClass('col-md-8');
                    $('#quiz').addClass('transparent');
                    $('#quiz').addClass('radius');
                    $('#startBtn').addClass('hidden');
                    $('#submitBtn').removeClass('hidden');
                    $('title').html('Đang làm bài thi');
                    $('#timePanel').removeClass('hidden');
                    let imageUrl = '/Content/images/prewhite.png';
                    $('body').css("background-image", "url(" + imageUrl + ")"); 
                    buildQuiz(Quiz.QuizList);
                    StartTimer(Quiz.TotalTime);
                }
                else {
                    swal('Lỗi', data.Message, 'warning')
                }
            });
        }
        function buildQuiz(Quiz) {
            // we'll need a place to store the HTML output
            const output = [];
            // for each question...
            let tempQuiz = Quiz.sort(function(a, b) {  
              return 0.6 - Math.random();
            } );  

            tempQuiz.forEach(
                (currentQuestion, questionNumber) => {
                    // we'll want to store the list of answer choices
                    const answers = [];
                    // ...add an HTML radio button
                    answers.push(
                        `<div>
                        <input type="radio" id="question${currentQuestion.ID}1" name="${currentQuestion.ID}" value="0">
                        <label for="question${currentQuestion.ID}1" >
                        ${currentQuestion.answerA}
                        </label>
                        </div>`
                    );
                    answers.push(
                        `<div>
                        <input type="radio" id="question${currentQuestion.ID}2" name="${currentQuestion.ID}" value="1">
                        <label for="question${currentQuestion.ID}2">
                        ${currentQuestion.answerB}
                        </label>
                        </div>`
                    );
                    answers.push(
                        `<div>
                        <input type="radio" id="question${currentQuestion.ID}3" name="${currentQuestion.ID}" value="2">
                        <label for="question${currentQuestion.ID}3">
                        ${currentQuestion.answerC}
                        </label>
                        </div>`
                    );
                    answers.push(
                        `<div>
                        <input type="radio" id="question${currentQuestion.ID}4" name="${currentQuestion.ID}" value="3">
                        <label for="question${currentQuestion.ID}4">
                        ${currentQuestion.answerD}
                        </label>
                        </div>`
                    );

                    // add this question and its answers to the output
                    output.push(
                        `<div>
                            <div class="question mt-1 q-title">${questionNumber + 1}. ${currentQuestion.Content}</div>
                            <div class="answers md-radio"> ${answers.join('')} </div>
                         </div>`
                    );
                }
            );

            // finally combine our output list into one string of HTML and put it on the page
            quizContainer.innerHTML = `<form id="quizForm">`+output.join('')+`</form>`;
        }
    </script>
    <script>
        function SubmitExam() {
            let countCheck = checkedAll();
            if (countCheck != Quiz.QuizList.length) {
                swal('Lỗi', 'Bạn chưa chọn hết đáp án', 'warning')
            }
            else {
                let answerList = [];
                $("form#quizForm :input").each(function () {
                    var input = $(this);
                    if (input.is(':checked')) {
                        let value = input.val();
                        let QuizID = input.attr("name");
                        answerList.push({ QuizID: QuizID, Answer: value });
                    }
                });
                SendData(answerList);
            }
            
        }
        function SendData(answerList)
        {
            $('#overlay').fadeIn();
            axios.post('/DoQuiz/SubmitExam', { roomCode: roomCode, answerList: answerList }).then(resp => {
                $('#overlay').fadeOut();
                swal('Đã nộp bài', 'Bạn đạt ' + Number(resp.data.score).toFixed(2) + '/' + resp.data.maxScore + ' điểm', 'success').then((e) => {
                    location.reload();
                })
            });
        }
        function checkedAll() {
            var count = 0;
            $("form#quizForm :input").each(function () {
                var input = $(this); 
                if (input.is(':checked')) {
                    count++;
                }
            });
            return count;
        }
        function EndTime() {
            let answerList = [];
            $("form#quizForm :input").each(function () {
                var input = $(this);
                if (input.is(':checked')) {
                    let value = input.val();
                    let QuizID = input.attr("name");
                    answerList.push({ QuizID: QuizID, Answer: value });
                }
            });
            SendData(answerList);
        }
    </script>
    <script language="JavaScript" type="text/javascript">
        function CountDownTimer(duration, granularity) {
            this.duration = duration * 60;
            this.granularity = granularity || 1000;
            this.tickFtns = [];
            this.running = false;
        }

        CountDownTimer.prototype.start = function () {
            if (this.running) {
                return;
            }
            this.running = true;
            var start = Date.now(),
                that = this,
                diff, obj;

            (function timer() {
                diff = that.duration - (((Date.now() - start) / 1000) | 0);

                if (diff > 0) {
                    setTimeout(timer, that.granularity);
                } else {
                    diff = 0;
                    that.running = false;
                }

                obj = CountDownTimer.parse(diff);
                that.tickFtns.forEach(function (ftn) {
                    ftn.call(this, obj.minutes, obj.seconds);
                }, that);
            }());
        };

        CountDownTimer.prototype.onTick = function (ftn) {
            if (typeof ftn === 'function') {
                this.tickFtns.push(ftn);
            }
            return this;
        };

        CountDownTimer.prototype.expired = function () {
            return !this.running;
        };

        CountDownTimer.parse = function (seconds) {
            return {
                'minutes': (seconds / 60) | 0,
                'seconds': (seconds % 60) | 0
            };
        };
        CountDownTimer.parseMinutes = function (minutes) {
            return {
                'minutes': (minutes) | 0,
                'seconds': 0
            };
        };
        function StartTimer(min) {
            var display = document.querySelector('#timer'),
                timer = new CountDownTimer(min),
                timeObj = CountDownTimer.parseMinutes(min);

            format(timeObj.minutes, timeObj.seconds);
            timer.onTick(format);
            timer.start();

            function format(minutes, seconds) {
                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;
                display.textContent = minutes + ':' + seconds;

                ///console.log(display.textContent);
                
                if (display.textContent == "00:00") {
                    EndTime();
                }
            }
        }
    </script>
    <script src="~/Scripts/axios.min.js"></script>
</body>
</html>
